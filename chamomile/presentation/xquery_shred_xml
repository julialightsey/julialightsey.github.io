SELECT C.value('(<column_a>)[1]', 'nvarchar(max)') AS [column_a]
       , C.value('(<column_b>)[1]', 'datetimeoffset') AS [column_b]
FROM   @entry.nodes('/list/item') AS [T](C)
ORDER  BY C.value('(column_b)[1]', 'datetimeoffset') ASC;

-- from sample
-- https://stackoverflow.com/questions/17332257/query-xml-while-ignoring-namespace
declare @test [xml] = '<Report xmlns="http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition" xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner">
  <DataSources>
    <DataSource Name="SQLDS">
      <rd:DataSourceID>32e83b35-434d-4808-b685-ada14accd0e7</rd:DataSourceID>
      <DataSourceReference>SQLDS</DataSourceReference>
    </DataSource>
  </DataSources>
  <DataSets>
    <DataSet Name="SQLDS">
      <Query>
        <DataSourceName>SQLDS</DataSourceName>
        <CommandType>StoredProcedure</CommandType>
        <CommandText>ReportProc_ServerPerformanceGroup</CommandText>
      </Query>
    </DataSet>
    <DataSet Name="GroupDetails">
      <Query>
        <DataSourceName>SQLDS</DataSourceName>
        <CommandType>StoredProcedure</CommandType>
        <CommandText>ReportProc_lalala</CommandText>
      </Query>
    </DataSet>
    <DataSet Name="SQLDS2">
      <Query>
        <DataSourceName>SQLDS2</DataSourceName>
        <CommandType>StoredProcedure2</CommandType>
        <CommandText>ReportProc_ServerPerformanceGroup2</CommandText>
      </Query>
    </DataSet>
  </DataSets>
</Report>';
 select T1.N.value('@Name', 'nvarchar(128)')                          as [DataSetName]
       , T2.N.value('(*:DataSourceName/text())[1]', 'nvarchar(128)') as [DataSourceName]
       , T2.N.value('(*:CommandType/text())[1]', 'nvarchar(128)')    as [CommandType]
       , T2.N.value('(*:CommandText/text())[1]', 'nvarchar(max)')    as [CommandText]
from   @test.nodes('/*:Report/*:DataSets/*:DataSet') as [T1](N)
       cross apply T1.N.nodes('*:Query') as [T2](N); 
